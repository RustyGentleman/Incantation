// --- Imports ---
@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap')
@font-face
   font-family: 'DePixel Halbfett'
   src: url('assets/depixelhalbfett.otf')
@font-face
   font-family: 'DePixel Klein'
   src: url('assets/depixelklein.otf')
@font-face
   font-family: 'DePixel Illegible'
   src: url('assets/depixelillegible.otf')
// ------------------
// --- Variables ----
// ------------------

$g-strokes: 0.2vmin
$pa-background: rgb(10, 10, 10)
$hp: rgb(200, 0, 0)
$max-depth: 15

// --- Animation Keyframes ---

@keyframes spin 
   0%
      transform: rotate(0deg)
   100%
      transform: rotate(360deg)
@keyframes reveal
   0%
      opacity: 0
   100%
      opacity: 1
@keyframes aftershock
   0%
      opacity: 0
      transform: rotateX(60deg) scale(2)
   100%
      opacity: 0.2
@keyframes node-reveal
   0%
      opacity: 0
   100%
      opacity: calc( ($max-depth - var(--depth)) / $max-depth)
@keyframes hide
   0%
      opacity: 1
   100%
      opacity: 0
@keyframes reveal-hide
   0%
      opacity: 0
   35%
      opacity: 1
   65%
      opacity: 1
   100%
      opacity: 0
@keyframes blink
   0%
      opacity: 0
   25%
      opacity: 0
   50%
      opacity: 1
   75%
      opacity: 1
   100%
      opacity: 0
@keyframes line-throb
   0%
      stroke-width: $g-strokes
   50%
      stroke-width: calc($g-strokes * 2)
   100%
      stroke-width: $g-strokes
@keyframes nonagon-flash
   0%
      box-shadow: 0 0 0rem 0rem red
   100%
      box-shadow: 0 0 15rem 1rem red
@keyframes nonagon-pulse
   0%
      box-shadow: 0 0 4rem 1rem red
   100%
      box-shadow: 0 0 15rem 1rem red
@keyframes powerup-bob
   0%
      transform: translateY(calc(-50% - 0rem)) scale(var(--scale))
   100%
      transform: translateY(calc(-50% - .7rem)) scale(var(--scale))
@keyframes powerup-shadow-flicker
   0%
      opacity: 1
   100%
      opacity: 0.5
@keyframes powerup-shine
   0%
      filter: contrast(1) brightness(1)
   100%
      filter: contrast(0.5) brightness(1.5)
@keyframes bg-scroll-walking
   0%
      background-position-x: 0%
   100%
      background-position-x: 100%
@keyframes bg-scroll-attacking
   0%
      background-position-x: 0%
   100%
      background-position-x: 100%
@keyframes bg-scroll-death
   0%
      background-position-x: 0%
   100%
      background-position-x: 100%
@keyframes bg-scroll-idle
   0%
      background-position-x: 0%
   100%
      background-position-x: 100%
@keyframes enemy-fast-shadow-follow
   0%
      opacity: 1
      transform: rotateX(60deg) scale(1.5) translateX(0rem) rotateY(calc(var(--flip-h) * 180deg))
      transition: transform 250ms linear

   100%
      opacity: 0.5
      transform: rotateX(60deg) scale(1.5) translateX(calc(0.8rem - calc(var(--flip-h) * 1.6rem))) rotateY(calc(var(--flip-h) * 180deg))
      transition: transform 250ms linear
@keyframes enemy-fast-shadow-death
   0%
      opacity: 1
      transform: rotateX(60deg) scale(1.5) translateX(0rem) rotateY(calc(var(--flip-h) * 180deg))
   30%
      opacity: 0.5
      transform: rotateX(60deg) scale(1.5) translateX(-0.7rem) rotateY(calc(var(--flip-h) * 180deg))
   40%
      opacity: 1
      transform: rotateX(60deg) scale(1.5) translateX(calc(-1rem - calc(var(--flip-h) * 2rem))) rotateY(calc(var(--flip-h) * 180deg))
   40%
      transform: rotateX(60deg) scale(1.5) translateX(calc(-1rem - calc(var(--flip-h) * 2rem))) rotateY(calc(var(--flip-h) * 180deg))
   100%
      transform: rotateX(60deg) scale(1.5) translateX(calc(-1.1rem - calc(var(--flip-h) * 1.6rem))) rotateY(calc(var(--flip-h) * 180deg))

// ------------------
// --- Structural ---
// ------------------

*
   box-sizing: border-box
   // animation: none
:root
   font-size: 2vmin
body
   width: 100vw
   height: 100vh
   margin: 0
   display: flex
   align-items: center
   align-content: center
   justify-content: center
   background-color: rgb(0, 0, 0)
   font-family: 'DePixel Klein'
   color: white
   text-rendering: geometricPrecision
   overflow: hidden
section
   position: absolute
   width: 100vmin
   height: 100vmin
   overflow: hidden
   cursor: cell

// ------------------
// ----- Graph ------
// ------------------

#graph
   position: absolute
   fill: none
   z-index: -100
   path
      z-index: inherit
      stroke-width: $g-strokes
      // stroke-width: 0
      stroke: rgba(255, 255, 255, 0.5)
      opacity: calc(0.3 + ($max-depth - var(--depth)) / $max-depth)

node
   --r: 4
   --depth: 0
   --zind: -1
   --rot: 0
   position: absolute
   top: 50%
   left: 50%
   animation: node-reveal 300ms 1
   height: calc(var(--r) * 1rem)
   width: calc(var(--r) * 1rem)
   background-color: transparent
   background-size: cover
   box-shadow: none
   opacity: calc( ($max-depth - var(--depth)) / $max-depth)
   transform-origin: center center
   transition: opacity 300ms ease
   transform: translate(calc(var(--x) * 1vmin), calc(var(--y) * 1vmin)) translateX(-50%) translateY(-50%) rotate(calc(var(--rot)))
   z-index: -1
   border-radius: 100%
   &.tint
      --hue-shift: 0
      filter: hue-rotate(calc(var(--hue-shift) * 1deg))
      background-color: red

// ------------------
// ---- Sections ----
// ------------------

section#playarea
   background: $pa-background
   z-index: -1000

section#intro
   z-index: 1000
   display: flex
   place-content: center
   place-items: center
   text-align: center
   flex-direction: column
   // text-shadow: 0 0 1rem black, 0 0 1rem black, 0 0 1rem black, 0 0 1rem black
   filter: drop-shadow(0 0 0.3rem rgb(10, 10, 10)) drop-shadow(0 0 0.3rem rgb(10, 10, 10)) drop-shadow(0 0 0.3rem rgb(10, 10, 10)) drop-shadow(0 0 0.3rem rgb(10, 10, 10))
   >div
      position: absolute
      top: 50%
      left: 50%
      transform: translate(-50%, -50%)
      &:nth-of-type(1)
         transform: translate(-50%, -50%) translateY(-10rem)

   #title
      font-family: 'DePixel Halbfett'
      font-size: 3rem
      opacity: 0
      animation: reveal 1.5s linear 1s forwards, hide 1.5s linear 7s forwards

   #subtitle
      font-family: 'DePixel Klein'
      font-size: 2rem
      opacity: 0
      animation: reveal 1.5s linear 2.5s forwards, hide 1.5s linear 7s forwards

   #premise
      width: 100%
      .premise
         opacity: 0
         --delay-reveal: 1s
         --delay-hide: 5s
         animation: reveal 1.5s linear var(--delay-reveal) forwards//, hide 1.5s linear var(--delay-hide) forwards
      #p1
         --delay-reveal: 8s
      #p2
         --delay-reveal: 10s
      #p3
         --delay-reveal: 12s
      #p4
         --delay-reveal: 14s
      #p5
         --delay-reveal: 16s
      #p6
         --delay-reveal: 18s
      #p7
         --delay-reveal: 20s

section#UI
   filter: drop-shadow(0 0 0.3rem rgb(10, 10, 10)) //drop-shadow(0 0 0.3rem rgb(10, 10, 10)) drop-shadow(0 0 0.3rem rgb(10, 10, 10))// drop-shadow(0 0 0.3rem rgb(10, 10, 10))
   > div
      display: flex
      place-content: center
      align-items: center
   #settings
      display: flex
      flex-direction: column
      position: absolute
      bottom: 0
      right: 0
      padding: 1rem
      >div
         width: 100%
         display: flex
         justify-content: space-between
      .value
      input[type="range"]
         width: calc(100% - 4rem)
         appearance: none
         background: none
         &::-webkit-slider-thumb
            z-index: 10
            appearance: none
            background: white
            height: .7rem
            width: .7rem
            margin-top: -.1rem
            box-shadow: 0 0 0 .1rem rgb(10, 10, 10)
            // outline: .1rem rgb(10, 10, 10)
         &::-webkit-slider-runnable-track
            appearance: none
            background: rgb(200, 200, 200)
            height: .5rem
   #timer
      opacity: 0
      font-size: 3rem
      margin-top: 2rem
      text-align: center
      animation: reveal .3s ease 5 alternate forwards
      animation-play-state: paused
   #messages
      display: block
      font-size: 1.5rem
      opacity: 0
      text-align: center
   #notices
      display: block
      font-family: 'DePixel Illegible'
      font-size: 1.5rem
      opacity: 0
      text-align: center
   #readyup
      font-family: 'DePixel Illegible'
      text-align: center
      position: absolute
      bottom: 0%
      left: 50%
      transform: translateX(-50%)
      margin-bottom: 4rem
      opacity: 0
      animation: blink 1s infinite 7.3s

section#controls
   pointer-events: none
   position: absolute
   top: 0
   display: flex
   flex-direction: column
   justify-content: flex-start
   align-items: flex-start
   padding: 2rem
   opacity: 0
   filter: drop-shadow(0 0 0.3rem rgb(10, 10, 10)) drop-shadow(0 0 0.3rem rgb(10, 10, 10)) drop-shadow(0 0 0.3rem rgb(10, 10, 10)) drop-shadow(0 0 0.3rem rgb(10, 10, 10))
   >div
      // text-align: center
      margin: .5rem 0
      padding: .2rem
   *
      vertical-align: middle

   .key
      display: inline-block
      position: relative
      width: 0.7rem
      margin: 0 .2rem
      text-align: center
      font-family: 'DePixel Klein'
      font-size: 0.7rem
      background-position: center center
      background-size: cover
      background-repeat: no-repeat
      &::before
         content: ''
         display: block
         width: 1.5rem
         height: 1.5rem
         position: absolute
         top: 60%
         left: 50%
         transform: translate(-50%, -50%)
         background-image: url('assets/sprites/keycap_unpressed.png')
         background-position: center center
         background-size: cover
         background-repeat: no-repeat
      &#space
         box-sizing: content-box
         display: inline-flex
         place-items: center
         place-content: center
         width: auto
         height: .1rem
         border: solid 0.74706510139rem transparent
         border-image: url(assets/sprites/keycap_unpressed.png) 49% 
         >span
            transform: translateY(-15%)
         &::before
            display: none
      &#up
         height: 0.7rem
         background-image: url('assets/sprites/arrow-up.png')
      &#left
         height: 0.7rem
         background-image: url('assets/sprites/arrow-left.png')
      &#down
         height: 0.7rem
         background-image: url('assets/sprites/arrow-down.png')
      &#right
         height: 0.7rem
         background-image: url('assets/sprites/arrow-right.png')

   .keygroup
      display: inline-flex
      flex-wrap: wrap
      place-content: center
      &#wasd,
      &#arrows
         width: 4.5rem
         height: 3rem
         >div
            height: 1.5rem
         >div:first-child
            width: auto

   .mouse
      display: inline-block
      position: relative
      height: 1rem
      width: 1rem
      &::before
         content: ''
         height: 1.5rem
         width: 1.5rem
         position: absolute
         top: 50%
         left: 50%
         transform: translate(-50%, -50%)
         background-position: center center
         background-size: cover
         background-repeat: no-repeat
      &.right::before
         background-image: url('assets/sprites/mouseR.png')
      &.left::before
         background-image: url('assets/sprites/mouseL.png')

section#overlay
   pointer-events: none
   z-index: 10000
   mix-blend-mode: overlay
   background-image: url(assets/sprites/dither.png)
   background-blend-mode: soft-light
   transition: background-color 300ms ease

// ------------------
// - Game elements --
// ------------------

.entity
   position: absolute
   left: 50%
   top: 50%
   width: 0
   height: 0
   display: grid
   place-content: center
   z-index: var(--zind)
   --x: 0
   --y: 0
   --zind: 50
   --color: white
   --scale: 1
   --gothit: 0
   transform: translate(calc(var(--x) * 1vmin), calc(var(--y) * 1vmin))
   transition: all 56ms ease
   .body
      width: 1rem
      height: 2rem
      background-color: var(--color)
      border-radius: 100%
      --skew-h: 0
      --skew-v: 0
      --angle: 0
      --matrix: 1, 0, calc(0.05 * var(--skew-h)), calc(1 + calc(0.05 * var(--skew-v))), 0, 0
      --matrixtd: 1, 0, 0, 0, 0, calc(1 + calc(0.05 * var(--skew-v))), 0, 0, 0, 0, 1, 0, 0, calc(-1 + var(--skew-v)), 0, 1
      --filter: sepia(0)
      --flip-h: 0
      --flip-v: 0
      --zind: 50
      z-index: var(--zind)

      // --matrix: 1, 0, 0.05, 1, -1, 0
      // --matrixtd: 1, 0, 0, 0, 0, 1.05, 0, 0, 0, 0, 1, 0, 0, -1, 0, 1
      transform: translateY(-50%) matrix(var(--matrix)) scale(var(--scale)) rotateY(calc(var(--flip-h) * 180deg)) rotateX(calc(var(--flip-v) * 180deg))
      transform-origin: bottom center
      transition: transform 56ms ease, filter 20ms ease
      filter: var(--filter) drop-shadow(0 0 .1rem rgb(10, 10, 10))
   .shadow::before
      content: ''
      width: 1rem
      height: 1rem
      background-color: rgb(10, 10, 10)
      border-radius: 100%
      position: absolute
      top: -0.5rem
      left: -0.5rem
      z-index: -10000000
      filter: blur(4px)
      --flip-h: 0
      --transform: skew(0)
      transform: rotateX(60deg) rotateY(calc(var(--flip-h) * 180deg)) scale(1.5) var(--transform)
   .rangefinder
      position: absolute
      background-image: radial-gradient(circle, rgb(255 255 255 / 10%) 0%, transparent calc(71% - $g-strokes), white calc(71% - $g-strokes))
      // background-image: url('assets/sprites/flash.png')
      background-size: cover
      height: calc(var(--radius) * 1rem)
      width: calc(var(--radius) * 1rem)
      // opacity: var(--opacity)
      transform: translate(-50%, -50%)
      transition: opacity 100ms ease
      transition: none
      border-radius: 50%
      z-index: calc(var(--y) - 1)
      &.active
         transition: none
   .hp
      position: absolute
      bottom: -20%
      left: 50%
      --flip-h: 0
      transform: translateX(-50%) rotateY(calc(var(--flip-h) * 180deg))
      width: 1.2rem
      height: 0.3rem
      background-color: black
      border: solid 1px var(--color)
      outline: solid 1px black
      opacity: var(--gothit)
      .hp-bar
         --hp: 0
         width: var(--hp)
         height: 100%
         background-color: var(--color)
   &.hit .body
      --scale: 1.15
      --filter: brightness(1.5) contrast(0.5)
      // transition: transform 30ms ease, filter 30ms ease

.dead .hp
   opacity: 0

#player
   --color: rgb(0, 217, 255)
   .body
      // background-image: radial-gradient(ellipse 20% 8% at calc(25%) 35%, black 80%, transparent 100%), radial-gradient(ellipse 20% 8% at calc(75%) 35%, black 80%, transparent 100%)
      border-radius: 45%
   .rangefinder
      // filter: hue-rotate(hue(cyan))

.enemy
   --color: rgb(200,0,0)
   .body
      width: 5rem
      height: 5rem
      background-color: transparent
      background-image: url(assets/sprites/enemy-normal-idle.png)
      background-position-x: 0%
      background-size: cover
      border-radius: 100% 100% 0 0
      image-rendering: pixelated
      transform: translateY(calc(-50% + 1.3rem)) scale(var(--scale)) rotateY(calc(var(--flip-h) * 180deg)) rotateX(calc(var(--flip-v) * 180deg)) //matrix(var(--matrix))
   .shadow::before
      // background-color: black
      z-index: -1000
   &.attacking .body
      background-image: url(assets/sprites/enemy-normal-attack.png)
      animation: bg-scroll-attacking 100ms steps(3, end)
      animation-iteration-count: 1
   &.walking .body
      background-image: url(assets/sprites/enemy-normal-walk.png)
      animation: bg-scroll-walking 700ms steps(7, end) 0s infinite
   &.dead
      .body
         background-image: url(assets/sprites/enemy-normal-death.png) !important
         animation: bg-scroll-death 1900ms steps(19, end) 0s 1 forwards !important
      .shadow::before
         z-index: -10000
         animation: hide 700ms ease 900ms 1 forwards
   &.back
      .body
         background-image: url(assets/sprites/enemy-normal-idle-back.png)
      &.attacking .body
         background-image: url(assets/sprites/enemy-normal-attack-back.png)
      &.walking .body
         background-image: url(assets/sprites/enemy-normal-walk-back.png)
      &.dead .body
         background-image: url(assets/sprites/enemy-normal-death-back.png) !important

.enemy.caster
   filter: hue-rotate(calc(var(--hue-shift) * 1deg + 10deg))
   .body
      width: 3.3rem
      height: 3.3rem
      background-color: transparent
      background-image: url(assets/sprites/enemy-caster-idle.png)
      background-position-x: 0%
      background-size: cover
      border-radius: 100% 100% 0 0
      transform: translateY(calc(-50% + 0.35rem)) scale(var(--scale)) rotateY(calc(var(--flip-h) * 180deg)) rotateX(calc(var(--flip-v) * 180deg)) //matrix(var(--matrix))
   &.attacking .body
      background-image: url(assets/sprites/enemy-caster-attack.png)
      animation: bg-scroll-attacking 910ms steps(6, end)
      animation-iteration-count: 1
   &.walking .body
      background-image: url(assets/sprites/enemy-caster-walk.png)
      animation: bg-scroll-walking 750ms steps(3, end) 0s infinite
   &.dead
      .body
         background-image: url(assets/sprites/enemy-caster-death.png) !important
         animation: bg-scroll-death 2400ms steps(15, end) 0s 1 forwards !important
      .shadow
         z-index: -10000
         animation: hide 1s ease 1s 1 forwards
   &.back
      .body
         background-image: url(assets/sprites/enemy-caster-idle-back.png)
      &.attacking .body
         background-image: url(assets/sprites/enemy-caster-attack-back.png)
      &.walking .body
         background-image: url(assets/sprites/enemy-caster-walk-back.png)
      &.dead .body
         background-image: url(assets/sprites/enemy-caster-death-back.png) !important

.enemy.fast
   filter: hue-rotate(calc(var(--hue-shift) * 1deg + 260deg))
   .body
      width: 5rem
      height: 5rem
      background-color: transparent
      background-image: url(assets/sprites/enemy-fast-idle.png)
      background-position-x: 0%
      background-size: cover
      border-radius: 100% 100% 0 0
      animation: bg-scroll-idle 400ms steps(3, end) 0s infinite
      transform: translateY(calc(-50% + 1.2rem)) scale(var(--scale)) rotateY(calc(var(--flip-h) * 180deg)) rotateX(calc(var(--flip-v) * 180deg)) //matrix(var(--matrix))
   .hp
      transform: translate(-50%, -1.5rem) rotateY(calc(var(--flip-h) * 180deg))
   &.attacking
      .body
         background-image: url(assets/sprites/enemy-fast-attack.png)
         animation: bg-scroll-attacking 250ms steps(8, end) alternate
         animation-iteration-count: 2
      .shadow::before
         animation: enemy-fast-shadow-follow 240ms ease-in-out 20ms 2 alternate forwards
   &.walking .body
      background-image: url(assets/sprites/enemy-fast-walk.png)
      animation: bg-scroll-walking 400ms steps(7, end) 0s infinite
   &.dead
      .body
         background-image: url(assets/sprites/enemy-fast-death.png) !important
         animation: bg-scroll-death 900ms steps(8, end) 0s 1 forwards !important
      .shadow::before
         z-index: -10000
         animation: enemy-fast-shadow-death 900ms linear 270ms 1 alternate forwards
   &.back
      .body
         background-image: url(assets/sprites/enemy-fast-idle-back.png)
      &.attacking .body
         background-image: url(assets/sprites/enemy-fast-attack-back.png)
      &.walking .body
         background-image: url(assets/sprites/enemy-fast-walk-back.png)
      &.dead .body
         background-image: url(assets/sprites/enemy-fast-death-back.png) !important

.enemy.heavy
   filter: hue-rotate(calc(var(--hue-shift) * 1deg + 10deg))
   .body
      width: 5rem
      height: 5rem
      background-color: transparent
      background-image: url(assets/sprites/enemy-heavy-idle.png)
      background-position-x: 0%
      background-size: cover
      border-radius: 100% 100% 0 0
      animation: bg-scroll-idle 400ms steps(3, end) 0s infinite
      transform: translateY(calc(-50% + 1.35rem)) scale(var(--scale)) rotateY(calc(var(--flip-h) * 180deg)) rotateX(calc(var(--flip-v) * 180deg)) //matrix(var(--matrix))
   &.attacking .body
      background-image: url(assets/sprites/enemy-heavy-attack.png)
      animation: bg-scroll-attacking 500ms steps(10, end)
      animation-iteration-count: 1
   &.walking .body
      background-image: url(assets/sprites/enemy-heavy-walk.png)
      animation: bg-scroll-walking 800ms steps(7, end) 0s infinite
   &.dead
      .body
         background-image: url(assets/sprites/enemy-heavy-death.png) !important
         animation: bg-scroll-death 1000ms steps(10, end) 0s 1 forwards !important
      .shadow::before
         animation: none
         transform: rotateX(60deg) scale(1.5) translateX(.25rem)
         transition: transform 200ms steps(2, start) 200ms
   &.back
      .body
         background-image: url(assets/sprites/enemy-heavy-idle-back.png)
      &.attacking .body
         background-image: url(assets/sprites/enemy-heavy-attack-back.png)
      &.walking .body
         background-image: url(assets/sprites/enemy-heavy-walk-back.png)
      &.dead .body
         background-image: url(assets/sprites/enemy-heavy-death-back.png) !important

#lord-of-lightning
   .body
      width: 10rem
      height: 10rem
      background-color: transparent
      background-image: url(assets/sprites/lord-of-lightning-idle.png)
      background-position-x: 0%
      background-size: cover
      border-radius: 100% 100% 0 0
      animation: bg-scroll-idle 600ms steps(5, end) 0s infinite
      transform: translateX(.8rem) translateY(calc(-50% + 1.35rem)) rotateY(calc(var(--flip-h) * 180deg))
   .shadow::before
      transform: rotateX(60deg) rotateY(calc(var(--flip-h) * 180deg)) scale(3.5) var(--transform)
      filter: blur(3px)
   .hp
      transform: translate(-.8rem, -2rem) translateX(-50%) rotateY(calc(var(--flip-h) * 180deg))
   &.attacking .body
      height: 12.5rem
      background-image: url(assets/sprites/lord-of-lightning-attack.png)
      animation: bg-scroll-attacking 1000ms steps(17, end) !important
      animation-iteration-count: 1
   &.roaring .body
      background-image: url(assets/sprites/lord-of-lightning-roar.png)
      animation: bg-scroll-walking 1500ms steps(14, end) 0s alternate forwards
      animation-iteration-count: 1

.mage
   --color: rgb(0, 100, 255)
   .body
      --rise: 0
      background-size: contain
      background-color: transparent
      background-repeat: no-repeat
      background-position: center center
      box-shadow: none
      height: 3.2rem
      width: 2rem
      border-radius: 0 0 100% 100%
      filter: drop-shadow(0 0.3vmin 0.1vmin rgb(10, 10, 10)) drop-shadow(0 0.3vmin 0.3vmin rgb(10, 10, 10))
      transform: translateY(calc(-50% + 0.2rem - var(--rise) * 1rem)) matrix(var(--matrix)) scale(var(--scale))
   &[data-entity-id="1"]
      --color: #d90300
      .body
         background-image: url('assets/sprites/mage-1.png')
   &[data-entity-id="2"]
      --color: #fe01ef
      .body
         background-image: url('assets/sprites/mage-2.png')
   &[data-entity-id="3"]
      --color: #00e204
      .body
         background-image: url('assets/sprites/mage-3.png')
   &[data-entity-id="4"]
      --color: #e2e505
      .body
         background-image: url('assets/sprites/mage-4.png')
   &[data-entity-id="5"]
      --color: #9a9a9a
      .body
         background-image: url('assets/sprites/mage-5.png')
   &[data-entity-id="6"]
      --color: #8b0b49
      .body
         background-image: url('assets/sprites/mage-6.png')
   &[data-entity-id="7"]
      --color: #02dae7
      .body
         background-image: url('assets/sprites/mage-7.png')
   &[data-entity-id="8"]
      --color: #e16a00
      .body
         background-image: url('assets/sprites/mage-8.png')
   &[data-entity-id="9"]
      --color: #0132E1
      .body
         background-image: url('assets/sprites/mage-9.png')

.powerup
   filter: drop-shadow(0 0 0.1vmin rgb(10, 10, 10)) drop-shadow(0 0 0.3vmin rgb(10, 10, 10))
   .body
      --height: 0rem
      height: 2rem
      width: 2rem
      background-size: contain
      background-color: transparent
      background-repeat: no-repeat
      background-position: center center
      box-shadow: none
      animation: powerup-bob 1.5s ease-in-out infinite alternate, powerup-shine .3s ease-in-out infinite alternate
   .shadow
      animation: powerup-shadow-flicker 1.5s ease-in-out infinite alternate
   &.atk .body
      background-image: url('assets/sprites/powerup-atk.gif')
      transform-origin: bottom
      --scale: 1.7
   &.atkRange .body
      background-image: url('assets/sprites/powerup-atkRange.png')
   &.atkCooldownTime
      filter: hue-rotate(103deg) brightness(1.7) drop-shadow(0 0 0.1vmin rgb(10, 10, 10)) drop-shadow(0 0 0.3vmin rgb(10, 10, 10))
      .body
         background-image: url('assets/sprites/powerup-atk.gif')
         transform-origin: bottom
         --scale: 1.7
         &::after
            background-image: url('assets/sprites/hourglass.gif')
            background-size: contain
            background-color: transparent
            background-repeat: no-repeat
            background-position: center center
            height: .7rem
            width: .7rem
            content: ''
            position: absolute
            bottom: -5%
            right: 20%
   &.speed .body
      background-image: url('assets/sprites/powerup-speed.png')
      --scale: 1.2
   &.heal .body
      background-image: url('assets/sprites/powerup-heal.gif')
      --scale: 1.7
      filter: saturate(2.5) drop-shadow(0 0 0.1vmin rgb(10, 10, 10)) drop-shadow(0 0 0.3vmin rgb(10, 10, 10))

.bonus
   color: rgb(0, 255, 76)

entity#balrog
// ------------------
// ---- Graphics ----
// ------------------

#nonagon-infinity .body
   animation: nonagon-flash 5s linear 12s 1 forwards, nonagon-pulse 2s linear 17s infinite alternate-reverse

#incantation-circle
   position: absolute
   width: 100%
   height: 100%
   #circle-lines
      path
         stroke-width: 0
         stroke: red

.projectile
   --ttime: 300ms
   --angle: 0deg
   --scale: 1
   transition: transform var(--ttime) linear
   transform: translate(calc(var(--x) * 1vmin), calc(var(--y) * 1vmin)) scale(var(--scale))
   filter: drop-shadow(0 0 .3rem rgb(10, 10, 10))
   box-shadow: none
   .shadow
      display: none
   .body
      width: 2rem
      height: 3rem
      transform: none
      background-color: transparent
      background-image: url(assets/sprites/enemy-caster-projectile.png)
      background-position-x: 0%
      background-position-y: bottom
      background-repeat: no-repeat
      background-size: 600% 2rem
      filter: drop-shadow(0 0 .1rem white)
      transform: translateY(-50%) rotate(calc(90deg + var(--angle) * 1rad))
   &.reached-end .body
      animation: bg-scroll-walking 500ms steps(5, end) 1 forwards

.projectile.lightning
   --angle: 0deg !important
   filter: none
   .body
      height: 15rem
      width: 14rem
      background-color: transparent
      background-image: url(assets/sprites/lightning.png)
      background-position-x: 0%
      background-size: cover
      animation: bg-scroll-idle 1740ms steps(28, end) 0s 1 normal forwards
      transform: translateY(-50%) rotateY(calc(var(--flip-h) * 180deg))
      filter: none
   .shadow
      display: initial
      &::before
         background-color: red
         filter: blur(5px)
         transform: rotateX(60deg) scale(10)
         opacity: 0
         animation: reveal 100ms ease-in-out 100ms 1, hide 100ms ease-in-out 200ms 1 forwards, aftershock 600ms ease-in-out 700ms 2 alternate forwards

// ------------------
// -- No graphics ---
// ------------------

body.low-graphics
   section#overlay
      // opacity: 0
      background-image: none !important
      background-color: none !important
   // .rangefinder
   //    background-image: none
   #circle-lines path
      animation: none !important
      box-shadow: 0 0 8rem 1rem red

body.graph-view
   #player .body
      position: relative
      height: 3rem
      background: linear-gradient(to top, red 0%, transparent 1rem), grey
      border-radius: 0% 0% 0% 100%
      // border: solid .2rem white
      transform: translateY(-50%) rotate(17deg)
      transform-origin: center
      transition: none
      &::after
         content: ''
         display: block
         position: absolute
         top: -95%
         right: -5%
         height: 3rem
         width: .6rem
         border-radius: .2rem
         background: rgb(50 50 50)

   #incantation-circle #circle-lines path,
   .mage
      display: none
   node
      --r: 0 !important
      background-image: none !important
      border: solid .5rem white
      &::before
         display: none
         content: attr(data-id)
         font-family: 'DePixel Halbfett'
         color: black
         filter: drop-shadow(0 0 .1rem white) drop-shadow(0 0 .1rem white)
         position: absolute
         left: 50%
         top: 50%
         transform: translate(-50%, -50%)
      &.extra
         display: none
   #nonagon-infinity
      --r: 8 !important
   #dust
      display: none

body.debug-info
   .entity .debug-widget
      position: absolute
      background: rgb(10 10 10 / 75%)
      border: solid .1rem rgb(200 200 200 / 75%)
      border-radius: .5rem
      padding: .3rem
      font-family: monospace
      font-size: .8rem
      > span
         font-size: .6rem
         display: flex
         justify-content: space-between